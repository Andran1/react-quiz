{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","containers/Auth/Auth.module.css","components/UI/input/Input.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","containers/QuizList/QuizList.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","axsios/axios-quiz.js","components/UI/Loader/Loader.js","containers/Quiz/Quiz.js","components/UI/input/Input.js","containers/Auth/Auth.js","components/UI/Select/Select.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","containers/QuizList/QuizList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","clickHandler","onClose","map","link","index","key","activeClassName","active","this","close","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","CloseHandler","children","AnswerItem","onAnswerClick","answer","text","AnswersList","answers","id","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","axios","create","baseURL","Loader","centre","Quiz","isFinished","activeQuestion","answerState","loading","onAnswerClickHandler","answerId","Number","rightAnswerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","get","match","params","response","data","console","log","QuizWrapper","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","a","authData","returnSecureToken","post","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","forEach","name","isValid","trim","is","onSubmit","AuthForm","renderInputs","Select","options","option","creteControl","config","validate","validateForm","hasOwnProperty","Auxiliary","createOptionControl","number","createFormControl","option1","option2","option3","option4","QuizCreator","addQuestionHandler","concat","questionItem","createQuizHandler","changeHandler","selectChangeHandler","select","renderControls","QuizList","quizes","renderQuizes","App","path","component","Boolean","location","hostname","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6b52f51d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__37QSq\",\"close\":\"Drawer_close__3DUjU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__28vh3\",\"open\":\"MenuToggle_open__1cTAR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__ZSgU_\",\"QuizWrapper\":\"Quiz_QuizWrapper__27Eno\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__toWeH\",\"Question\":\"ActiveQuiz_Question__2pOe5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3faJ9\",\"success\":\"AnswerItem_success__22jCg\",\"error\":\"AnswerItem_error__2L28Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2D-_A\",\"success\":\"FinishedQuiz_success__2jSX1\",\"error\":\"FinishedQuiz_error__3G4ll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1tsQu\",\"error\":\"Button_error__2y4FG\",\"success\":\"Button_success__3Q3cr\",\"primary\":\"Button_primary__2z8pt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__eCqd1\",\"lds-ripple\":\"Loader_lds-ripple__1Wk7C\",\"centre\":\"Loader_centre__34eB9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1OqkH\",\"AuthForm\":\"Auth_AuthForm__1LmhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__PbvAV\",\"invalid\":\"Input_invalid__3_40e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3O_Lk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__t_89W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__3QbEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__1g9Ko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__3lji9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__EOQU7\"};","import React from 'react'\r\nimport classes from './MenuToggle.module.css'\r\n\r\nconst MenuToggle=(props)=>{\r\n    const cls=[\r\n        classes.MenuToggle,\r\n        'fa'\r\n    ]\r\n\r\n    if(props.isOpen){\r\n     cls.push('fa-times')\r\n     cls.push(classes.open)\r\n    }else{\r\n     cls.push('fa-bars')\r\n    }\r\n    return (\r\n        <i\r\n         className={cls.join(' ')}\r\n         onClick={props.onToggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuToggle   ","import React from 'react'\r\nimport classes from './Backdrop.module.css'\r\n\r\n\r\nconst Backdrop=props=><div className={classes.Backdrop}\r\n                            onClick={props.onClick}></div>\r\n\r\nexport default Backdrop","import React, { Component } from \"react\";\r\nimport classes from \"./Drawer.module.css\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst links = [\r\n    {to:'/', label:'List',exact:true},\r\n    {to:'/auth', label:'Authorization',exact:false},\r\n    {to:'/quiz-creator', label:'Creat-test',exact:false}\r\n    ];\r\n\r\nclass Drawer extends Component {\r\n\r\n    clickHandler=()=>{\r\n        this.props.onClose()\r\n    }\r\n    \r\n  renderLinks() {\r\n    return links.map((link, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <NavLink\r\n          to={link.to}\r\n          exact={link.exact}\r\n          activeClassName={classes.active}\r\n          onClick={this.clickHandler}\r\n          >\r\n              {link.label}\r\n          </NavLink>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const cls = [classes.Drawer];\r\n\r\n    if (!this.props.isOpen) {\r\n      cls.push(classes.close);\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <nav className={cls.join(\" \")}>\r\n          <ul>{this.renderLinks()}</ul>\r\n        </nav>\r\n\r\n        {this.props.isOpen? <Backdrop onClick={this.props.onClose}/> : null }\r\n        \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Drawer;\r\n","import React, { Component } from \"react\";\r\nimport classes from './Layout.module.css'\r\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\n\r\nclass Layout extends Component {\r\n\r\nstate={\r\n  menu:false\r\n}\r\n\r\n  toggleMenuHandler=()=>{\r\n    this.setState({\r\n      menu:!this.state.menu\r\n    })\r\n  }\r\n\r\n  CloseHandler=()=>{\r\n    this.setState({\r\n      menu:false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Layout}>\r\n        <Drawer\r\n          isOpen={this.state.menu}\r\n          onClose={this.CloseHandler}\r\n        />\r\n        <MenuToggle\r\n           onToggle={this.toggleMenuHandler}\r\n           isOpen={this.state.menu }\r\n        />\r\n        <main>{this.props.children}</main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n ","import React from \"react\";\r\nimport classes from \"./AnswerItem.module.css\";\r\n\r\nconst AnswerItem = (props) => {\r\n  const cls = [classes.AnswerItem];\r\n  if (props.state) {\r\n    cls.push(classes[props.state]);\r\n  }\r\n  return (\r\n    <li className={cls.join(\" \")} onClick={props.onAnswerClick}>\r\n      {props.answer.text}\r\n    </li>\r\n  );\r\n};\r\nexport default AnswerItem;\r\n","import React from \"react\";\r\nimport classes from \"./AnswersList.module.css\";\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\r\n\r\nconst AnswersList = (props) => {\r\n  return (\r\n    <ul className={classes.AnswersList}>\r\n      {props.answers.map((answer, index) => {\r\n        return (\r\n          <AnswerItem\r\n            key={index}\r\n            answer={answer}\r\n            onAnswerClick={() => props.onAnswerClick(answer.id)}\r\n            state={props.state ? props.state[answer.id] : null} //  {1: \"error\"} {3: \"success\"}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default AnswersList;\r\n","import React from \"react\";\r\nimport classes from \"./ActiveQuiz.module.css\";\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\n\r\nconst ActiveQuiz = (props) => (\r\n  <div className={classes.ActiveQuiz}>\r\n    <p className={classes.Question}>\r\n      <span>\r\n        <strong>{props.answerNumber}.</strong>&nbsp;\r\n        {props.question}\r\n      </span>\r\n      <small>\r\n        {props.answerNumber} from {props.quizLength}\r\n      </small>\r\n    </p>\r\n    <AnswersList\r\n     answers={props.answers}\r\n\r\n     onAnswerClick={props.onAnswerClick} \r\n     \r\n     state={props.state}\r\n     />\r\n  </div>\r\n);\r\n\r\nexport default ActiveQuiz; \r\n","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  const cls = [classes.Button, classes[props.type]];\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className={cls.join(\" \")}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  ); \r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport classes from \"./FinishedQuiz.module.css\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FinishedQuiz = (props) => {\r\n  // console.log(props);\r\n  const successCount = Object.keys(props.results).reduce((total, key) => {\r\n    if (props.results[key] === \"success\") {\r\n      total++;\r\n    }\r\n    return total;\r\n  }, 0);\r\n\r\n  return (\r\n    <div className={classes.FinishedQuiz}>\r\n      <ul>\r\n        {props.quiz.map((quizItem, index) => {\r\n          const cls = [\r\n            \"fa\",\r\n            props.results[quizItem.id] === \"error\" ? \"fa-times\" : \"fa-check\",\r\n            classes[props.results[quizItem.id]],\r\n          ];\r\n\r\n          return (\r\n            <li key={index}>\r\n              <strong>{index + 1}</strong>.&nbsp;\r\n              {quizItem.question}\r\n              <i className={cls.join(\" \")} />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      <p>\r\n        that's right {successCount} from {props.quiz.length}{\" \"}\r\n      </p>\r\n      <div>\r\n        <Button onClick={props.onRetry} type=\"primary\">\r\n          Repeat\r\n        </Button>\r\n        <Link to='/'>\r\n          <Button onClick={props.onRetry} type=\"success\">\r\n          Go over test list\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default FinishedQuiz;\r\n","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n  baseURL:\"https://react-quiz-2d2f4.firebaseio.com/\"  \r\n})","import React from 'react'\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader=(props)=>(\r\n    <div className={classes.centre}>\r\n        <div className={classes.Loader}>\r\n            <div/><div/>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Loader","import React, { Component } from \"react\";\r\nimport classes from \"./Quiz.module.css\";\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\r\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\r\nimport axios from \"../../axsios/axios-quiz\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\n\r\nclass Quiz extends Component {\r\n  state = {\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n\r\n    quiz: [], // question,   answers{id,text},    rightAnswerId\r\n    loading: true,\r\n  };\r\n\r\n  onAnswerClickHandler = (answerId) => {\r\n    const { quiz, answerState } = this.state;\r\n    if (answerState) {\r\n      const key = Object.keys(answerState)[0];\r\n      if (answerState[key] === \"success\") {\r\n        return;\r\n      }\r\n    }\r\n\r\n    const question = quiz[this.state.activeQuestion];\r\n    const results = this.state.results;\r\n\r\n    if (Number(question.rightAnswerId) === answerId) {\r\n      if (!results[question.id]) {\r\n        results[question.id] = \"success\";\r\n      }\r\n\r\n      this.setState({\r\n        answerState: { [answerId]: \"success\" },\r\n        results,\r\n      });\r\n\r\n      const timeout = window.setTimeout(() => {\r\n        if (this.isQuizFinished()) {\r\n          this.setState({\r\n            isFinished: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            activeQuestion: this.state.activeQuestion + 1,\r\n            answerState: null,\r\n          });\r\n        }\r\n\r\n        window.clearTimeout(timeout);\r\n      }, 1000);\r\n    } else {\r\n      results[question.id] = \"error\";\r\n\r\n      this.setState({\r\n        answerState: { [answerId]: \"error\" },\r\n        results,\r\n      });\r\n    }\r\n  };\r\n  isQuizFinished() {\r\n    return this.state.activeQuestion + 1 === this.state.quiz.length;\r\n  }\r\n\r\n  retryHandler = () => {\r\n    this.setState({\r\n      results: {},\r\n      isFinished: false,\r\n      activeQuestion: 0,\r\n      answerState: null,\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await axios.get(\r\n        `/quizes/${this.props.match.params.id}.json`\r\n      );\r\n      const quiz = response.data;\r\n      console.log(quiz);\r\n\r\n      this.setState({\r\n        quiz,\r\n        loading: false,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Quiz}>\r\n        <div className={classes.QuizWrapper}>\r\n          <h1>All question</h1>\r\n\r\n          {this.state.loading ? (\r\n            <Loader />\r\n          ) : this.state.isFinished ? (\r\n            <FinishedQuiz\r\n              results={this.state.results}\r\n              quiz={this.state.quiz}\r\n              onRetry={this.retryHandler}\r\n            />\r\n          ) : (\r\n            <ActiveQuiz\r\n              answers={this.state.quiz[this.state.activeQuestion].answers}\r\n              question={this.state.quiz[this.state.activeQuestion].question}\r\n              onAnswerClick={this.onAnswerClickHandler}\r\n              quizLength={this.state.quiz.length}\r\n              answerNumber={this.state.activeQuestion + 1}\r\n              state={this.state.answerState}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Quiz;\r\n","import React from 'react'\r\nimport classes from './Input.module.css'\r\n\r\nfunction isInvalid({valid,touched,shouldValidate}){\r\n    return !valid&&shouldValidate&&touched\r\n\r\n}\r\n\r\nconst Input=(props)=>{\r\n    // console.log(props); \r\n\r\n    const inputType= props.type||'text'\r\n    const cls=[classes.Input]\r\n    const htmlFor=`${inputType}-${Math.random()}`\r\n    if(isInvalid(props)){\r\n        cls.push(classes.invalid)\r\n    }\r\n\r\n    return(\r\n        <div className={cls.join(\" \")}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input \r\n              type={inputType}\r\n              id={htmlFor}\r\n              value={props.value}\r\n              onChange={props.onChange}\r\n              />\r\n              {\r\n                  isInvalid(props)\r\n                  ?<span>{props.errorMessage || \"enter the correct data\"}</span>:null\r\n              }\r\n              \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React, { Component } from \"react\";\r\nimport classes from \"./Auth.module.css\";\r\nimport Buttom from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/input/Input\";\r\nimport is from \"is_js\";\r\nimport axios from \"axios\"\r\n\r\nexport default class Auth extends Component {\r\n  state = {\r\n    isFormValid: false,\r\n    formControls: {\r\n      email: {\r\n        value: \"\",\r\n        type: \"email\",\r\n        label: \"Email\",\r\n        errorMessage: \"enter correctly email\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true,\r\n        },\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        type: \"password\",\r\n        label: \"Password\",\r\n        errorMessage: \"enter correctly password\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  loginHandler = async() => {\r\n    const authData = {\r\n        email: this.state.formControls.email.value,\r\n        password: this.state.formControls.password.value,\r\n        returnSecureToken: true,\r\n      };\r\n  \r\n      try {\r\n        const response = await axios.post(\r\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA4manTOkXPfTObbO_VjJWEaQnYm5_y8ME\",\r\n          authData\r\n        );\r\n        console.log(response.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n\r\n   \r\n  };\r\n\r\n  registerHandler = async() => {\r\n    const authData = {\r\n        email: this.state.formControls.email.value,\r\n        password: this.state.formControls.password.value,\r\n        returnSecureToken: true,\r\n      };\r\n  \r\n      try {\r\n        const response = await axios.post(\r\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA4manTOkXPfTObbO_VjJWEaQnYm5_y8ME\",\r\n          authData\r\n        );\r\n        console.log(response.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n  }\r\n\r\n  validateControl (value, validation) {\r\n\r\n    if (!validation) {\r\n      return true;\r\n    }\r\n\r\n    let isValid = true;\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n\r\n    if (validation.email) {\r\n      isValid = is.email(value) && isValid;\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  onChangeHandler = (event, controlName) => {\r\n    //   console.log(`${controlName}:`, event.target.value);\r\n\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n\r\n    control.value = event.target.value;\r\n    control.touched = true;\r\n    control.valid = this.validateControl(control.value, control.validation);\r\n\r\n    formControls[controlName] = control;\r\n\r\n    let isFormValid = true;\r\n\r\n    Object.keys(formControls).forEach((name) => {\r\n      isFormValid = formControls[name].valid && isFormValid;\r\n    });\r\n    this.setState({\r\n      formControls,\r\n      isFormValid,\r\n    });\r\n  };\r\n\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n      return (\r\n        <Input\r\n          key={controlName + index}\r\n          type={control.type}\r\n          value={control.value}\r\n          valid={control.valid}\r\n          touched={control.touched}\r\n          label={control.label}\r\n          shouldValidate={!!control.validation}\r\n          errorMessage={control.errorMessage}\r\n          onChange={(event) => this.onChangeHandler(event, controlName)}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Auth}>\r\n        <div>\r\n          <h1>Authorization</h1>\r\n          <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n            {this.renderInputs()}\r\n\r\n            <Buttom\r\n              type=\"success\"\r\n              onClick={this.loginHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Sing in\r\n            </Buttom>\r\n\r\n            <Buttom\r\n              type=\"primary\"\r\n              onClick={this.registerHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Sing up\r\n            </Buttom>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./Select.module.css\";\r\n\r\nconst Select = (props) => {\r\n  const htmlFor = `${props.label}-${Math.random()}`;\r\n  return (\r\n    <div className={classes.Select}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <select\r\n       id={htmlFor}\r\n       value={props.value}\r\n       onChange={props.onChange}>\r\n\r\n        {props.options.map((option, index) => {\r\n          return (\r\n            <option \r\n            value={option.value} \r\n            key={option.value + index}\r\n            >\r\n              {option.text}\r\n            </option>\r\n          );\r\n        })}\r\n\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","export function creteControl(config, validation) {\r\n  return {\r\n    ...config,\r\n    validation,\r\n    valid: !validation,\r\n    touched: false,\r\n    value: \"\",\r\n  };\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n  if (!validate) {\r\n    return true;\r\n  }\r\n  let isValid=true\r\n\r\n  if(validation.required){\r\n      isValid=value.trim()!==''&&isValid\r\n  }\r\n \r\n  return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n\r\n    let isFormValid=true\r\n\r\n    for (let control in formControls){\r\n        if(formControls.hasOwnProperty(control)){\r\n           isFormValid=formControls[control].valid&&isFormValid\r\n        }\r\n    }\r\n    return isFormValid\r\n}\r\n\r\n","const Auxiliary=props=>props.children\r\n\r\nexport default Auxiliary","import React, { Component } from \"react\";\r\nimport classes from \"../QuizCreator/QuizCreator.module.css\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/input/Input\";\r\nimport Select from \"../../components/UI/Select/Select\";\r\nimport { creteControl, validate, validateForm } from \"../../form/formFramework\";\r\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\r\nimport axios from \"../../axsios/axios-quiz\";\r\n\r\nfunction createOptionControl(number) {\r\n  return creteControl(\r\n    {\r\n      label: `option ${number}`,\r\n      errorMessage: \"value cannot be empty\",\r\n      id: number,\r\n    },\r\n    { required: true }\r\n  );\r\n}\r\n\r\nfunction createFormControl() {\r\n  return {\r\n    question: creteControl(\r\n      {\r\n        label: \"Enter a question\",\r\n        errorMessage: \"the question cannot be empty\",\r\n      },\r\n      { required: true }\r\n    ),\r\n\r\n    option1: createOptionControl(1),\r\n    option2: createOptionControl(2),\r\n    option3: createOptionControl(3),\r\n    option4: createOptionControl(4),\r\n  };\r\n}\r\n\r\nexport default class QuizCreator extends Component {\r\n  state = {\r\n    quiz: [],\r\n    isFormValid: false,\r\n    rightAnswerId: 1,\r\n    formControls: createFormControl(),\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  addQuestionHandler = (event) => {\r\n    const quiz = this.state.quiz.concat();\r\n    const index = quiz.length + 1;\r\n    const {\r\n      question,\r\n      option1,\r\n      option2,\r\n      option3,\r\n      option4,\r\n    } = this.state.formControls;\r\n\r\n    const questionItem = {\r\n      question: question.value,\r\n      id: index,\r\n      rightAnswerId: this.state.rightAnswerId,\r\n      answers: [\r\n        { text: option1.value, id: option1.id },\r\n        { text: option2.value, id: option2.id },\r\n        { text: option3.value, id: option3.id },\r\n        { text: option4.value, id: option4.id },\r\n      ],\r\n    };\r\n    quiz.push(questionItem);\r\n\r\n    this.setState({\r\n      quiz,\r\n      isFormValid: false,\r\n      rightAnswerId: this.state.rightAnswerId,\r\n      formControls: createFormControl(),\r\n    });\r\n    console.log(this.state.rightAnswerId);\r\n  };\r\n\r\n  createQuizHandler = async (event) => {\r\n    try {\r\n      await axios.post(\r\n        \"/quizes.json\",\r\n        this.state.quiz\r\n      );\r\n    this.setState({\r\n        quiz:[],\r\n        isFormValid: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormControl(),\r\n      });\r\n    \r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  changeHandler = (value, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n\r\n    control.touched = true;\r\n    control.value = value;\r\n    control.valid = validate(control.value, control.validation);\r\n\r\n    formControls[controlName] = control;\r\n\r\n    this.setState({\r\n      formControls,\r\n      isFormValid: validateForm(formControls),\r\n    });\r\n  };\r\n\r\n  renderControls() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n      return (\r\n        <Auxiliary key={controlName + index}>\r\n          <Input\r\n            value={control.value}\r\n            valid={control.valid}\r\n            touched={control.touched}\r\n            label={control.label}\r\n            shouldValidate={!!control.validation}\r\n            errorMessage={control.errorMessage}\r\n            onChange={(event) =>\r\n              this.changeHandler(event.target.value, controlName)\r\n            }\r\n          />\r\n\r\n          {index === 0 ? <hr /> : null}\r\n        </Auxiliary>\r\n      );\r\n    });\r\n  }\r\n\r\n  selectChangeHandler = (event) => {\r\n    //   console.log(event.target.value);\r\n    this.setState({\r\n      rightAnswerId: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    // console.log(this.state);\r\n    const select = (\r\n      <Select\r\n        label=\"Choose the correct answer\"\r\n        value={this.state.rightAnswerId}\r\n        onChange={this.selectChangeHandler}\r\n        options={[\r\n          { text: 1, value: 1 },\r\n          { text: 2, value: 2 },\r\n          { text: 3, value: 3 },\r\n          { text: 4, value: 4 },\r\n        ]}\r\n      />\r\n    );\r\n    return (\r\n      <div className={classes.QuizCreator}>\r\n        <div>\r\n          <h1>Create test</h1>\r\n\r\n          <form onSubmit={this.submitHandler}>\r\n            {this.renderControls()}\r\n\r\n            {select}\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.addQuestionHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Add question\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.createQuizHandler}\r\n              disabled={this.state.quiz.length === 0}\r\n            >\r\n              Create test\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./QuizList.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport axios from \"../../axsios/axios-quiz\";\r\n\r\nexport default class QuizList extends Component {\r\n\r\n  state={\r\n    quizes:[],\r\n    loading:true\r\n  }\r\n  renderQuizes() {\r\n    return this.state.quizes.map(quiz => {\r\n      return (\r\n        <li key={quiz.id}>\r\n          <NavLink to={\"/quiz/\" + quiz.id}>{quiz.name}</NavLink>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await axios.get(\r\n        \"/quizes.json\"\r\n      );\r\n      // console.log(response.data);\r\n      const quizes=[]\r\n      Object.keys(response.data).forEach((key,index)=>{\r\n        quizes.push({\r\n          id:key,\r\n          name:`Test N ${index+1}`\r\n        })\r\n        // console.log(quizes);\r\n        this.setState({\r\n          quizes,\r\n          loading:false\r\n        })\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.QuizList}>\r\n        <div>\r\n          <h1>Test list</h1>\r\n          {\r\n              this.state.loading\r\n              ?<Loader/>:<ul>{this.renderQuizes()}</ul>\r\n          }\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport Quiz from \"./containers/Quiz/Quiz\";\nimport {Route, Switch} from 'react-router-dom'\nimport Auth from \"./containers/Auth/Auth\";\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport QuizList from \"./containers/QuizList/QuizList\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/auth' component={Auth}/>\n        <Route path='/quiz-creator' component={QuizCreator}/>\n        <Route path='/quiz/:id' component={Quiz}/>\n        <Route path='/' component={QuizList}/>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}